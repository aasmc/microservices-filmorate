version: '3.9'
services:
  postgres-film:
    image: postgres:15.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "filmorate_dev"
      PGDATA: /data/postgres
    volumes:
      - ./postgres-film:/data/postgres
    networks:
      backend:
        aliases:
          - "postgres-film"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-user:
    image: postgres:15.3
    ports:
      - "5431:5431"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "filmorate_user"
      PGDATA: /data/postgres
    volumes:
      - ./postgres-user:/data/postgres
    expose:
      - "5431"
    command:
      - -p 5431
    networks:
      backend:
        aliases:
          - "postgres-user"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db
    networks:
      backend:
        aliases:
          - "mongo"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      backend:
        aliases:
          - "zookeeper"

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      backend:
        aliases:
          - "broker"

  kadeck-db:
    container_name: "kadeck-db"
    ports:
      - "5435:5432"
    image: postgres:12.6
    restart: on-failure:3
    environment:
      POSTGRES_DB: "kadeckweb"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    networks:
      backend:
        aliases:
          - "kadeck-db"

  kadeck:
    container_name: "kadeck"
    ports:
      - "80:80"
    image: xeotek/kadeck-allinone:latest
    environment:
      xeotek_kadeck_home: "kadeckweb"
      xeotek_kadeck_db_username: "postgres"
      xeotek_kadeck_db_password: "postgres"
      xeotek_kadeck_db_url: "jdbc:postgresql://kadeck-db:5432/kadeckweb"
    networks:
      backend:
        aliases:
          - "kadeck"

  cmak:
    image: hlebalbau/kafka-manager:stable
    container_name: "cmak"
    restart: always
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
    depends_on:
      - zookeeper
      - broker
    networks:
      backend:
        aliases:
          - "cmak"

networks:
  backend:
    driver: bridge